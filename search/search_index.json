{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"What is Compatibowl","text":"<p>Compatibowl is a distro where all of your apps whether they be from the AUR, Fedora, Nix, Windows, MacOS, or Android, work and integrate tightly with your desktop environment. It's immutable and atomic nature makes it incredibly stable and solid.</p> <p></p>"},{"location":"#credits","title":"Credits","text":"<p>Special thanks to Nix, apx, Waydroid, cassowary, Docker-OSX, and uBlue for making this possible.</p>"},{"location":"android/","title":"Android","text":"<p>Compatibowl also can use android apps via Waydroid. To set it up, simply run <code>just init-waydroid</code>. If you would like things like ARM app compatibility (reccomended) or the Google Play Store (also reccomended) and more, simply run <code>just configure-waydroid</code>.</p> <p>Important Note: Waydroid requires being run in Wayland. If you are on an X11 session you will need to use something like Weston. To find out how to do this check out the Waydroid docs</p>"},{"location":"android/#google-play-certification-recommended","title":"Google Play Certification (Recommended)","text":"<p>Run Waydroid and open a host terminal window and run:</p> <pre><code>sudo waydroid shell\n</code></pre> <p>Inside the Waydroid shell (It should just say <code>:/ #</code> before the text cursor), enter this command:</p> <pre><code>ANDROID_RUNTIME_ROOT=/apex/com.android.runtime ANDROID_DATA=/data ANDROID_TZDATA_ROOT=/apex/com.android.tzdata ANDROID_I18N_ROOT=/apex/com.android.i18n sqlite3 /data/data/com.google.android.gsf/databases/gservices.db \"select * from main where name = \\\"android_id\\\";\"\n</code></pre> <p>When you run this command, your terminal should output <code>android_id|</code> and some numbers. Copy the numbers, then visit this website.</p> <p>Paste the number in the box that says \"Google Services Framework ID\", answer the captcha (If one is present), then hit register. You should see a popup saying \"Device Registered\" on the bottom left.</p> <p>You can now type <code>exit</code> in your terminal to leave the Waydroid shell.</p> <p>Stop the Waydroid container.</p> <pre><code>waydroid session stop\n</code></pre> <p>Relaunch Waydroid and you should now have Google Play certification.</p>"},{"location":"android/#hybrid-graphics-fix","title":"Hybrid Graphics Fix","text":"<p>If your PC is running multiple GPUs and you experience either graphical corruption or Waydroid does not launch, then execute this script to fix it.  </p> <p>Easiest way to run this script is to copy all of this text into a text file save it as <code>waydroid_fix.sh</code> to your Home directory.  Open a host terminal and entering: </p> <pre><code>sudo ./waydroid_fix.sh\n</code></pre> <p>Then select your dedicated GPU.</p>"},{"location":"android/#reset-waydroid","title":"Reset Waydroid","text":"<p>Note</p> <p>This will delete all of your current Waydroid data!</p> <p>Enter <code>just reset-waydroid</code> if you run into any major issues.</p>"},{"location":"installation/","title":"Installation","text":"<p>Check out the upstream installation documentation for more information.</p> <p>Notably:</p> <ul> <li>Dual boot configurations are not supported. We recommend using your PC's BIOS/UEFI boot menu for dual boot configuration so that each OS has its own disk.</li> <li>Manual partitioning is not supported.</li> </ul> <p>This ISO is experimental</p> <p>This method of consuming Fedora is new, and will not be integrated into Fedora until at least F39. Though this method is typically more reliable than traditional distributions, take care to read the user guide and manage your expectations accordingly. As with all operating systems, make a point to back up the data you care about! </p>"},{"location":"installation/#installation-instructions","title":"Installation Instructions","text":"<p>There is a known issue with Ventoy</p> <p>We are aware of an issue where booting from the ISO with Ventoy leads to a black screen with a cursor and nothing happening. This is due to an upstream bug with Anaconda and the way Ventoy sets up loop mounts. We are preparing a workaround to enable this workflow. In the meantime, please do not create a new issue on GitHub. You can react with a thumbs up on this issue so we can track how many people want this feature.</p> <p>For new systems, follow the instructions below:</p> <p>Download the ISO </p> <ol> <li> <p>Use the Fedora Media Writer to write the ISO to a USB stick.     Mac and Windows users can download it here. Or use a tool of your choice.</p> </li> <li> <p>If you are familiar with Anaconda there are a few changes you might notice:</p> <p></p> </li> <li> <p>\"Kickstart Insufficient\" is expected, select that item and select the disk to install to and click Done at the top left of the screen.      User creation is also done at this step instead of first boot.</p> </li> <li> <p>Ensure the machine is on the network by configuring that, otherwise you will get an error (see below)!</p> </li> <li> <p>Select each screen with a warning triangle and make the selection you want until the screen looks similar to this:</p> <p></p> </li> <li> <p>Continue on with the installation</p> <p>Warning</p> <p>The progress bar during installation will start, but will not progress until towards the end of installation. Depending on the image size this might take a long time. This may appear as though the installation is stalled.  </p> <p></p> <p>When the installation is complete it will ask you to reboot, then you're done!</p> </li> </ol>"},{"location":"installation/#other-gotchas","title":"Other gotchas","text":"<ul> <li>Reminder: this is a <code>netinstaller</code>!</li> <li>If the network connection is spotty, the installation download of the image might stall or time out, resulting in an error message (see bottom of page).<ul> <li>Retrying the installation might help depending on network conditions.</li> <li>Using an ethernet connection is usually more reliable.</li> </ul> </li> <li>The generated USB stick will always pull the latest image, you shouldn't need to generate a new USB stick often.</li> <li>We are looking for volunteers to help generate proper \"offline\" ISOs.</li> <li>If you're still having problems with the ISO you can always install Fedora Silverblue and then rebase to one of our images.</li> </ul>"},{"location":"installation/#secure-boot","title":"Secure Boot","text":"<p>If you choose to install an nvidia variant and have Secure Boot enabled, the installer will automatically use <code>mokutil</code> to import the ublue-os nvidia module signing key as a Machine Owner Key (MOK) in your UEFI secure boot database.</p> <p>During the post-install reboot, your system will prompt to verify enrollment of the key.</p> <p>The installer uses a default password for MOK enrollment: ublue-os</p> <p>Warning</p> <p>If you use <code>secureboot</code> and do not enroll the MOK, you will boot to a blank screen, as nouveau has been disabled since nvidia drivers were installed but unable to load without the MOK.</p>"},{"location":"installation/#reporting-issues","title":"Reporting Issues","text":"<p>Please file an issue if you encounter any problems. An error screen usually looks like this:  </p> <p></p>"},{"location":"macOS/","title":"MacOS","text":"<p>MacOS support is courtesy of Docker-OSX.</p> <p>Important Note: Ventura is non-functional. If you try to update to it, it will make MacOS, and its apps, not work.</p> <p>To setup MacOS, simply run <code>just mac-install</code>.</p> <p>Important Note: If you select APFS as the filesystem it will also become non functional.</p>"},{"location":"package-management/","title":"Package Management","text":"<p>Compatibowl has many options for installing linux-native software from any distro.</p>"},{"location":"package-management/#flatpak","title":"Flatpak","text":"<p>Flatpak runs each app in its own isolated and containerized evironment. This is the prefered method of installing linux apps on Compatibowl. You can use a Desktop Environment's software store or use it via the command line using <code>flatpak install &lt;package-name&gt;.</code> It is only really a valid option for desktop apps.</p>"},{"location":"package-management/#apx","title":"APX","text":"<p>APX installs packages in containers and tighly integrates them with the base system. Packages from the AUR and DNF can be installed simply running <code>apx install --aur &lt;package-name&gt;</code> and <code>apx install --dnf &lt;package-name&gt;</code>, repectively.</p>"},{"location":"package-management/#nix","title":"Nix","text":"<p>Packages installed from Nix are just as easy to install. Simply run <code>nix-env -iA &lt;package-name&gt;</code>. If the software is not cached on Nix's severs, it will build it from source.</p>"},{"location":"package-management/#distrobox-and-toolbox","title":"Distrobox and Toolbox","text":"<p>Should none of the above options work you should utilize toolbox or distrobox. Toolboxes are little CLI podman containers that you can install anything into without it polluting your host system. Read more on the dedicated page.</p>"},{"location":"package-management/#rpm-ostree","title":"rpm-ostree","text":"<p><code>rpm-ostree</code> is the system package manager for Compatibowl. Unlike more traditional Linux desktops, on an image-based Linux distribution you probably shouldn't install everything directly onto your base system. The more liberally you use the system package manager, the more likely you are to run into some instability that affects your base operating system, therefore we recommend that you use it sparingly.</p> <p>To install a single package (for example, <code>zsh</code>), run:</p> <pre><code>sudo rpm-ostree install zsh\n</code></pre> <p>To install multiple packages (for example, various CLI text editors), run:</p> <pre><code>sudo rpm-ostree install micro neovim helix\n</code></pre> <p>To apply the staged new staged image that includes your packages, reboot your computer.</p> <p>There is no search functionality in <code>rpm-ostree</code>, but you can use a general package search website such as Repology. There is also no command to enable copr or other repositories in <code>rpm-ostree</code>, but you can add the repo files manually to <code>/etc/yum.repos.d/</code></p>"},{"location":"windows/","title":"Windows","text":"<p>Windows support is courtesy of cassowary.</p> <p>Before setting up Windows, check to see if the apps you need are supported by wine at WineHQ AppDB. If they are listed as supported, you should set them up with Bottles.</p> <p>Before you set up windows, you will need to make QEMU run as non-root. To do this, use the preconfigured just runner by running <code>just qemu-non-root</code>. Then you can follow below excerpt from cassowary:</p>"},{"location":"windows/#download-windows-iso-image-and-virtio-drivers-for-windows","title":"Download Windows .iso image and VirtIO Drivers for Windows","text":"<p>We will need either Windows 7, 8, or 10 Pro, Enterprise or Server to use RDP apps. VirtIO driver will improve the VM performance while having lowest overhead.</p> <ul> <li> <p>Download Windows 10 or 11.</p> </li> <li> <p>Download latest VirtIO driver iso images from: HERE</p> </li> </ul> <p>and save them in a convenient location.</p>"},{"location":"windows/#creating-a-virtual-machine","title":"Creating a Virtual Machine","text":"<ul> <li> <p>Open virt-manager from your application menu</p> </li> <li> <p>On virt-manager click on Edit -&gt; Preferences, check Enable XML editing then click Close;  </p> </li> </ul> <p></p> <ul> <li> <p>From virt-manager menu bar select File and then New Virtual Machine;</p> </li> <li> <p>On the New VM window select Local Install media and click Next;  </p> </li> </ul> <p></p> <ul> <li> <p>Browse and select the Windows 10 iso you downloaded on install media then click Next again;</p> </li> <li> <p>Set the CPU cores (2 recommended), Memory (4096 MB recommended) and Disk Space as per your preferences;  </p> </li> </ul> <p> </p> <ul> <li>Give a name to your vm such as <code>Win10</code> and check Customize configuration before install then click on Finish!;  </li> </ul> <p></p> <ul> <li>In the CPU tab make sure Copy host configuration is checked;  </li> </ul> <p></p> <ul> <li>Goto XML tab of CPU and replace the section:</li> </ul> <pre><code>&lt;clock offset=\"localtime\"&gt;\n    .......\n    .......\n&lt;/clock&gt;\n</code></pre> <p>with:</p> <pre><code>&lt;clock offset=\"localtime\"&gt;\n  &lt;timer name=\"hpet\" present=\"yes\"/&gt;\n  &lt;timer name=\"hypervclock\" present=\"yes\"/&gt;\n&lt;/clock&gt;\n</code></pre> <ul> <li>In the Memory tab set the Current allocation to 1024, so the VM won't use 4GiB of memory directly but it will range from 1GiB to 4GiB;  </li> </ul> <p></p> <ul> <li> <p>In the Boot Options tab you could check Start the virtual machine on host bootup if you would like the VM to boot automatically at your PC boot;</p> </li> <li> <p>In the SATA Disk 1 tab set the Disk bus to VirtIO;  </p> </li> </ul> <p>If you are using Windows 7 skip this step as VirtIO is not supported.</p> <p></p> <ul> <li>Move over to NIC section and set Device model to virtio;  </li> </ul> <p></p> <ul> <li>Click on Add hardware at the bottom left, select Storage then choose Select or Create custom storage; click on Manage, browse and select the downloaded virtio-win driver iso. Finally set the device type to CDROM and click on Finish;  </li> </ul> <p></p> <ul> <li> <p>Click Begin Installation on top left;</p> </li> <li> <p>Follow the installation instructions for Windows 10 and when choosing a Custom installation you will get no drives to install Windows 10 on. To make the VirtIO drive works you will have to click on Load Driver, then choose OK and finally select the driver for Windows 10;</p> </li> </ul> <p>If no drivers are loaded or shown, let Windows search for them inside the <code>amd64</code> folder of the VirtIO disk.</p> <p></p> <ul> <li>After that your drive will show and you can continue like a normal Windows 10 installation;</li> <li>After some time you will get to \"Let's connect to internet page\", click on I don't have internet at bottom left and continue with limited setup;</li> <li>Set your username and password. The Password is not allowed to be blank;</li> <li>After you get to Windows 10 desktop open This PC and browse to virtio-win CD drive and install virtio-win-gt-x64.exe;</li> <li>It's also suggested to install the spice guest tools to also enable copy-paste between host and guest;</li> <li>Shut down the VM and from the menubar select View and then Details;</li> <li>Go to Display Spice section and set Listen Type to None; also check the OpenGL option and click Apply;</li> <li>Go to Video QXL section and set Model to VirtIO and check the 3D acceleration option;</li> </ul> <p>If you get a black screen after those changes, revert those changes. This could happen with nvidia graphics card;</p> <ul> <li>Start the VM by clicking the play button on the top left (you may need to click the Monitor icon to show the VM screen ). Login to desktop;</li> <li>Open up edge and browse to this page and continue the instructions for installing cassowary.</li> </ul>"},{"location":"windows/#on-windows-guest","title":"On Windows (guest)","text":"<ul> <li>Open Settings, click on System, scroll to bottom and click on Remote desktop then click on Enable Remote Desktop and click confirm!</li> <li>Open this page and download latest .zip from the cassowary release page</li> <li>Extract the downloaded .zip file</li> <li>Double click on <code>setup.bat</code> located on extracted directory</li> <li>Logout and login again to windows session</li> <li>After you have logged in continue the instructions below</li> </ul>"},{"location":"windows/#on-linux-host","title":"On Linux (host)","text":"<p>Here we will be using Arch Linux. You can easily find equivalent commands for your Linux distro.</p> <ul> <li>Go to the cassowary release page and download latest <code>.whl</code>;  </li> <li>Open terminal on the location where you downloaded the <code>.whl</code> file;  </li> <li>Install <code>python3</code>, <code>python3-pip</code>, <code>freerdp2</code>, <code>libvirt-python3</code> packages and dependencies by running following commands on terminal:</li> </ul> <pre><code>$ sudo pacman -S python3 python3-pip freerdp libvirt-python\n$ pip3 install PyQt5\n</code></pre> <ul> <li>Install the downloaded <code>.whl</code> file by running:</li> </ul> <pre><code>$ pip install cassowary*\n</code></pre> <p>If you get any warning about the folder <code>/home/$USER/.local/bin</code> not in your PATH, you can easily add it by adding it to your <code>$HOME/.profile</code> or <code>$HOME/.bash_profile</code>:</p> <p><code>echo \"PATH=\\$PATH:$HOME/.local/bin\" &gt;&gt; $HOME/.profile</code></p> <ul> <li>Launch cassowary configuration utility with:</li> </ul> <pre><code>$ python3 -m cassowary -a\n</code></pre> <ul> <li>Head over to Misc tab and click on \"Setup Autostart\" and \"Create\". This will bring cassowary to your application menu and setup background service autostart;</li> <li>Enter the VM name from the VM setup step; in this case <code>Win10</code>;</li> <li>Click on \"Save changes\" and then on \"Autodetect\", this should automatically fill up the VM IP;</li> <li>Click \"Save changes\" again then click \"Autofill host/username\" then enter the password you set during the windows setup. Then click \"Save changes\" again;</li> <li>Now goto \"Guest app\" tab and create shortcut for any application you want.</li> </ul> <p>Now you can find application on your application menu which you can use to launch apps easily You can explore other commandline usage of cassowary by running:</p> <pre><code>$ python -m cassowary -h\n</code></pre> <p>For advanced configuration or FAQ, check the configuration page of cassowary.</p>"}]}